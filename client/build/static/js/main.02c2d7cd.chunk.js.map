{"version":3,"sources":["assets/grass.mp4","utils/Auth.js","components/Header.js","components/Footer.js","pages/Main.js","utils/Mutations.js","pages/Signup.js","pages/Login.js","utils/Queries.js","pages/Catalog.js","pages/List.js","pages/AddProduct.js","pages/UpdateProduct.js","App.js","reportWebVitals.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","console","log","Header","style","firstLink","marginTop","marginBottom","marginRight","textDecoration","color","link","marginLeft","spacer","header","justifyContent","position","top","width","zIndex","backdropFilter","backgroundColor","margin","h1","fontFamily","fontSize","button","useState","isLoggedIn","setLoginStatus","useEffect","history","useHistory","handleClick","push","className","Row","Col","align","nav","Auth","loggedIn","Button","id","variant","onClick","event","preventDefault","clear","logout","Footer","bottom","Main","ADD_USER","gql","LOGIN_USER","ADD_PRODUCT","DELETE_PRODUCT","UPDATE_PRODUCT","Signup","container","input","padding","boxSizing","card","borderColor","name","email","streetAddress1","streetAddress2","city","state","zipcode","password","formState","setFormState","useMutation","addUser","error","data","handleChange","target","value","handleFormSubmit","a","variables","login","height","to","Form","onSubmit","placeholder","type","onChange","Zipcode","message","Login","props","user","_id","QUERY_USERS","QUERY_PRODUCTS","Catalog","boxShadow","borderRadius","textAlign","row","display","flexDirection","useQuery","loading","product","products","productArray","i","length","aProduct","Array","isArray","currentUserId","refetchQueries","query","deleteProduct","maxWidth","overflowX","Container","fluid","map","oneProduct","Card","Img","src","image","img","Body","Title","Text","desc","price","quantity","paddingTop","List","link2","mapouter","gmap_canvas","overflow","background","users","userArray","aUser","count","mkAddress","u","address","encodeURI","frameBorder","scrolling","marginHeight","marginWidth","href","AddProduct","alignItems","paddingBottom","float","addProduct","cursor","UpdateProduct","updateProductName","updateProductImage","updateProductDesc","updateProductPrice","updateProductQuantity","updateProduct","e","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","concat","cache","InMemoryCache","App","video","objectFit","left","ApolloProvider","autoPlay","loop","muted","playsInline","classes","Video","mainBackground","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02c2d7cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/grass.b2de869b.mp4\";","import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"id_token\");\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/\");\n    console.log(\"login\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"id_token\");\n    //window.location.reload();\n    console.log(\"logged out\");\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Auth from \"../utils/Auth\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Col, Row, Button } from \"react-bootstrap\";\n\nconst Header = () => {\n  const style = {\n    firstLink: {\n      marginTop: \"15px\",\n      marginBottom: \"15px\",\n      marginRight: \"15px\",\n      textDecoration: \"none\",\n      color: \"white\",\n    },\n    link: {\n      marginTop: \"15px\",\n      marginBottom: \"15px\",\n      marginLeft: \"15px\",\n      marginRight: \"15px\",\n      textDecoration: \"none\",\n      color: \"black\",\n    },\n    spacer: {\n      color: \"white\",\n    },\n    header: {\n      justifyContent: \"center\",\n      position: \"fixed\",\n      top: 0,\n      width: \"100vw\",\n      zIndex: \"999\",\n      backdropFilter: \"blur(2px)\",\n      backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n      margin: 0,\n    },\n    h1: {\n      fontFamily: \"'Finger Paint', cursive\",\n      fontSize: \"80px\",\n      color: \"white\",\n    },\n    button: {\n      marginLeft: \"15px\",\n      marginRight: \"15px\",\n    },\n  };\n\n  const logout = (event) => {\n    event.preventDefault();\n    localStorage.clear();\n    Auth.logout();\n    setLoginStatus(false);\n    handleClick();\n  };\n\n  const [isLoggedIn, setLoginStatus] = useState(true);\n\n  useEffect(() => {\n    console.log(\"Login status: \" + isLoggedIn);\n  });\n\n  const history = useHistory();\n  const handleClick = () => history.push(\"/login\");\n\n  return (\n    <header className=\"text-dark mb-4 py-3 text-center\" style={style.header}>\n      <Row>\n        <Col className=\"col-1\"></Col>\n        <Col className=\"col-10\" align=\"center\">\n          <div style={style.nav}>\n            {!Auth.loggedIn() ? (\n              <>\n                <Button\n                  id=\"findNav\"\n                  variant=\"outline-light\"\n                  style={style.button}\n                  onClick={() => {\n                    history.push(\"/list\");\n                  }}\n                >\n                  FIND\n                </Button>\n                <Button\n                  id=\"loginNav\"\n                  variant=\"outline-light\"\n                  style={style.button}\n                  onClick={() => {\n                    history.push(\"/login\");\n                  }}\n                >\n                  LOGIN\n                </Button>\n                <Button\n                  id=\"signUpNav\"\n                  variant=\"outline-light\"\n                  style={style.button}\n                  onClick={() => {\n                    history.push(\"/signup\");\n                  }}\n                >\n                  SIGNUP\n                </Button>\n              </>\n            ) : (\n              <>\n                <Button\n                  id=\"homeNav\"\n                  variant=\"outline-light\"\n                  style={style.button}\n                  onClick={() => {\n                    history.push(\"/\");\n                  }}\n                >\n                  HOME\n                </Button>\n                <Button\n                  id=\"findNav\"\n                  variant=\"outline-light\"\n                  style={style.button}\n                  onClick={() => {\n                    history.push(\"/list\");\n                  }}\n                >\n                  FIND\n                </Button>\n                <Button\n                  id=\"addNav\"\n                  variant=\"outline-light\"\n                  style={style.button}\n                  onClick={() => {\n                    history.push(\"/addproduct\");\n                  }}\n                >\n                  POST\n                </Button>\n                <Button\n                  id=\"logoutNav\"\n                  variant=\"outline-light\"\n                  style={style.button}\n                  onClick={logout}\n                >\n                  LOGOUT\n                </Button>\n              </>\n            )}\n          </div>\n        </Col>\n        <Col className=\"col-1\"></Col>\n      </Row>\n      <h1 style={style.h1}>YARDSALE</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","const Footer = () => {\n  const style = {\n    footer: {\n      position: \"fixed\",\n      bottom: 0,\n      width: \"100%\",\n    },\n  };\n  return <h1 style={style.footer}>Footer</h1>;\n};\n\nexport default Footer;\n","//Required: \"about\" information.  The homepage.\n\nconst Main = () => {\n  const style = {};\n  return <h1>Main</h1>;\n};\n\nexport default Main;\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $name: String!\n    $email: String!\n    $password: String!\n    $streetAddress1: String!\n    $streetAddress2: String!\n    $city: String!\n    $state: String!\n    $zipcode: String!\n  ) {\n    addUser(\n      name: $name\n      email: $email\n      password: $password\n      streetAddress1: $streetAddress1\n      streetAddress2: $streetAddress2\n      city: $city\n      state: $state\n      zipcode: $zipcode\n    ) {\n      token\n      user {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const DELETE_USER = gql`\n  mutation deleteUser($email: String!) {\n    deleteUser(email: $email) {\n      email\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        name\n      }\n    }\n  }\n`;\n\nexport const ADD_PRODUCT = gql`\n  mutation addProduct(\n    $image: String!\n    $name: String!\n    $desc: String!\n    $price: String!\n    $quantity: String!\n    $user: String!\n  ) {\n    addProduct(\n      image: $image\n      name: $name\n      desc: $desc\n      price: $price\n      quantity: $quantity\n      user: $user\n    ) {\n      image\n      name\n      desc\n      price\n      quantity\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const DELETE_PRODUCT = gql`\n  mutation deleteProduct($name: String!) {\n    deleteProduct(name: $name) {\n      name\n    }\n  }\n`;\n\nexport const UPDATE_PRODUCT = gql`\n  mutation updateProduct(\n    $image: String!\n    $name: String!\n    $desc: String!\n    $price: String!\n    $quantity: String!\n    $user: String!\n  ) {\n    updateProduct(\n      image: $image\n      name: $name\n      desc: $desc\n      price: $price\n      quantity: $quantity\n      user: $user\n    ) {\n      _id\n      image\n      name\n      desc\n      price\n      quantity\n      user {\n        _id\n      }\n    }\n  }\n`;\n","//Required: inputs for name, email, password, and button to submit\n//Optional: avatar image upload, address, and phone number\n\n//Create User Account\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/Mutations\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nimport Auth from \"../utils/Auth\";\n\nconst Signup = () => {\n  const style = {\n    container: {\n      zIndex: 1,\n    },\n    input: {\n      width: \"100%\",\n      padding: \"12px 20px\",\n      margin: \"8px 0\",\n      boxSizing: \"border-box\",\n    },\n    card: {\n      backdropFilter: \"blur(2px)\",\n      backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n      borderColor: \"white\",\n    },\n    button: {\n      margin: \"25px\",\n    },\n  };\n\n  const [formState, setFormState] = useState({\n    name: \"\",\n    email: \"\",\n    streetAddress1: \"\",\n    streetAddress2: \"\",\n    city: \"\",\n    state: \"\",\n    zipcode: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n\n    console.log(formState);\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <Row style={{ height: \"33vh\" }}></Row>\n      <Row>\n        <Col className=\"col-sm-1 col-md-2 col-lg-4\"></Col>\n        <Col className=\"col-12 col-sm-10 col-md-8 col-lg-4\" align=\"center\">\n          <div className=\"card\" style={style.card}>\n            <h4 className=\"card-header text-light border-0 p-2\">Sign Up</h4>\n            <div className=\"card-body\" style={style.container}>\n              {data ? (\n                <p>\n                  Success! You may now head{\" \"}\n                  <Link to=\"/shop\">back to the homepage.</Link>\n                </p>\n              ) : (\n                <Form onSubmit={handleFormSubmit}>\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Your name\"\n                    name=\"name\"\n                    type=\"text\"\n                    style={style.input}\n                    value={formState.name}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Your email\"\n                    name=\"email\"\n                    type=\"email\"\n                    style={style.input}\n                    value={formState.email}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Address Line 1\"\n                    name=\"streetAddress1\"\n                    type=\"text\"\n                    style={style.input}\n                    value={formState.streetAddress1}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Address Line 2\"\n                    name=\"streetAddress2\"\n                    type=\"text\"\n                    style={style.input}\n                    value={formState.streetAddress2}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"City\"\n                    name=\"city\"\n                    type=\"text\"\n                    style={style.input}\n                    value={formState.city}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"State\"\n                    name=\"state\"\n                    type=\"text\"\n                    style={style.input}\n                    value={formState.state}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Zipcode\"\n                    name=\"zipcode\"\n                    type=\"number\"\n                    style={style.input}\n                    value={formState.Zipcode}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"******\"\n                    name=\"password\"\n                    type=\"password\"\n                    style={style.input}\n                    value={formState.password}\n                    onChange={handleChange}\n                  />\n                  <Button\n                    variant=\"outline-light\"\n                    style={style.button}\n                    type=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Form>\n              )}\n\n              {error && (\n                <div className=\"my-3 p-3 bg-danger text-white\">\n                  {error.message}\n                </div>\n              )}\n            </div>\n          </div>\n        </Col>\n        <Col className=\"col-sm-1 col-md-2 col-lg-4\"></Col>\n      </Row>\n    </main>\n  );\n};\n\nexport default Signup;\n","//Required: input for email, password, and button to submit.\n//Optional: error message display, button to \"remember me on this computer\"\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../utils/Mutations\";\nimport Auth from \"../utils/Auth\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nconst Login = (props) => {\n  const style = {\n    container: {\n      zIndex: 1,\n    },\n    input: {\n      width: \"100%\",\n      padding: \"12px 20px\",\n      margin: \"8px 0\",\n      boxSizing: \"border-box\",\n    },\n    card: {\n      backdropFilter: \"blur(2px)\",\n      backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n      borderColor: \"white\",\n    },\n    button: {\n      margin: \"25px\",\n    },\n  };\n\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      localStorage.setItem(\"currentId\", data.login.user._id);\n\n      localStorage.setItem(\"email\", formState.email);\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <Row style={{ height: \"33vh\" }}></Row>\n      <Row>\n        <Col className=\"col-sm-1 col-md-2 col-lg-4\"></Col>\n        <Col className=\"col-12 col-sm-10 col-md-8 col-lg-4\" align=\"center\">\n          <div className=\"card\" style={style.card}>\n            <h4 className=\"card-header text-light border-0 p-2\">Login</h4>\n            <div className=\"card-body\" style={style.container}>\n              <Form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  style={style.input}\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  style={style.input}\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <Button\n                  variant=\"outline-light\"\n                  style={style.button}\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </Form>\n\n              {error && (\n                <div className=\"my-3 p-3 bg-danger text-white\">\n                  {error.message}\n                </div>\n              )}\n            </div>\n          </div>\n        </Col>\n        <Col className=\"col-sm-1 col-md-2 col-lg-4\"></Col>\n      </Row>\n    </main>\n  );\n};\n\nexport default Login;\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_USERS = gql`\n  query allUsers {\n    users {\n      _id\n      name\n      email\n      streetAddress1\n      streetAddress2\n      city\n      state\n      zipcode\n    }\n  }\n`;\nexport const QUERY_SINGLE_USER = gql`\n  query User($userId: ID!) {\n    user(userId: $userId) {\n      _id\n      name\n      email\n      streetAddress1\n      streetAddress2\n      city\n      state\n      zipcode\n    }\n  }\n`;\n\nexport const QUERY_USERBYEMAIL = gql`\n  query User($userEmail: String!) {\n    userByEmail(userEmail: $userEmail) {\n      _id\n      name\n      email\n      streetAddress1\n      streetAddress2\n      state\n      zipcode\n    }\n  }\n`;\n\nexport const QUERY_PRODUCTS = gql`\nquery allProducts {\n  products {\n    _id\n    image\n    name\n    desc\n    price\n    quantity\n    user{\n      _id\n    }\n  }\n}\n`;\n\nexport const QUERY_SINGLE_PRODUCT = gql`\n  query Product($productId: ID!) {\n    product(productId: $productId) {\n      _id\n      image\n      name\n      desc\n      price\n      quantity\n      user{\n        _id\n      }\n    }\n  }\n`;\n\n","//view showing all items for a garage sale\nimport React, { useState, useEffect, initialState } from \"react\";\nimport { Container, Row, Col, Card, Button, Form } from \"react-bootstrap\";\nimport { QUERY_PRODUCTS, QUERY_USERBYEMAIL } from \"../utils/Queries\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/Auth\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { DELETE_PRODUCT } from \"../utils/Mutations\";\n\nconst Catalog = () => {\n  const style = {\n    card: {\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      marginTop: \"25px\",\n      marginBottom: \"25px\",\n      boxShadow: \"0 15px 25px rgba(129, 124, 124, 0.2)\",\n      borderRadius: \"5px\",\n      padding: \"10px\",\n      textAlign: \"center\",\n      backdropFilter: \"blur(2px)\",\n      borderColor: \"white\",\n      color: \"white\",\n      backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n    },\n    button: {\n      marginLeft: \"5px\",\n      marginRight: \"5px\",\n    },\n    row: {\n      display: \"flex\",\n      flexDirection: \"row\",\n    },\n  };\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n  const product = data?.products || {};\n\n  const productArray = [];\n\n  for (var i = 0; i < product.length; i++) {\n    const aProduct = Array.isArray(product) && product.length ? product[i] : {};\n\n    console.log(aProduct.user._id);\n\n    const currentUserId = localStorage.getItem(\"id\");\n    if (aProduct.user._id === currentUserId) {\n      productArray.push(aProduct);\n    }\n  }\n\n  const [deleteProduct] = useMutation(DELETE_PRODUCT, {\n    refetchQueries: [{ query: QUERY_PRODUCTS }],\n  });\n\n  const renderCard = (oneProduct) => {\n    return (\n      <Card style={style.card} key={oneProduct.id}>\n        <Card.Img\n          variant=\"top\"\n          src={oneProduct.image}\n          style={style.img}\n          className=\"img-responsive center-block\"\n        />\n\n        <Card.Body>\n          <Card.Title>{oneProduct.name}</Card.Title>\n          <Card.Text>{oneProduct.desc}</Card.Text>\n\n          <p>${oneProduct.price}</p>\n          <p>Quantity Availible: {oneProduct.quantity}</p>\n        </Card.Body>\n        <Card.Footer className=\"text-center\" style={{ paddingTop: \"10px\" }}>\n          {oneProduct.user._id != localStorage.getItem(\"currentId\") ? (\n            <>\n              <Link className=\"btn btn-outline-light\" to=\"/login\">\n                Login to Change\n              </Link>\n            </>\n          ) : (\n            <>\n              <Link\n                className=\"btn btn-outline-light\"\n                style={style.button}\n                to=\"/updateproduct\"\n                onClick={() => {\n                  console.log(typeof oneProduct._id);\n                  //save name of product to be updated to local storage.\n                  localStorage.setItem(\"idOfUpdateProduct\", oneProduct._id);\n\n                  localStorage.setItem(\n                    \"imageOfUpdateProduct\",\n                    oneProduct.image\n                  );\n                  localStorage.setItem(\"nameOfUpdateProduct\", oneProduct.name);\n                  localStorage.setItem(\"descOfUpdateProduct\", oneProduct.desc);\n                  localStorage.setItem(\n                    \"priceOfUpdateProduct\",\n                    oneProduct.price\n                  );\n                  localStorage.setItem(\n                    \"quantityOfUpdateProduct\",\n                    oneProduct.quantity\n                  );\n                }}\n              >\n                Update\n              </Link>\n              <Button\n                variant=\"outline-light\"\n                style={style.button}\n                onClick={() => {\n                  deleteProduct({ variables: { name: oneProduct.name } });\n                }}\n              >\n                Delete\n              </Button>\n            </>\n          )}\n        </Card.Footer>\n      </Card>\n    );\n  };\n\n  return (\n    <div style={{ maxWidth: \"100vw\", overflowX: \"hidden\" }}>\n      <Container style={style.container} fluid>\n        <Row style={{ height: \"33vh\" }}></Row>\n\n        <Row>\n          <Col className=\"col-1 col-sm-2 col-md-4\"></Col>\n          <Col className=\"col-10 col-sm-8 col-md-4\">\n            {productArray.map(renderCard)}\n          </Col>\n          <Col className=\"col-1 col-sm-2 col-md-4\"></Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Catalog;\n","//Required: list of all active garage sales.  When a user clicks\n//on one the catalog component retrives the associated items and displays\n//List items will display username and address\n\nimport React, { useState, useEffect, initialState } from \"react\";\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\nimport { QUERY_USERS } from \"../utils/Queries\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport Auth from \"../utils/Auth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst List = () => {\n  const style = {\n    card: {\n      marginRight: \"auto\",\n      marginLeft: \"auto\",\n      marginTop: \"25px\",\n      marginBottom: \"25px\",\n      boxShadow: \"0 15px 25px rgba(129, 124, 124, 0.2)\",\n      borderRadius: \"5px\",\n      padding: \"10px\",\n      textAlign: \"center\",\n      backdropFilter: \"blur(2px)\",\n      backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n      borderColor: \"white\",\n      color: \"white\",\n    },\n    link2: {\n      color: \"white\",\n    },\n    mapouter: {\n      position: \"relative\",\n      textAlign: \"right\",\n      height: \"50%\",\n      width: \"100%\",\n    },\n    gmap_canvas: {\n      overflow: \"hidden\",\n      background: \"none!important\",\n      height: \"50%\",\n      width: \"100%\",\n      textAlign: \"center\",\n    },\n  };\n\n  const { loading, data } = useQuery(QUERY_USERS);\n  const user = data?.users || {};\n  console.log(user);\n\n  const userArray = [];\n\n  for (var i = 0; i < user.length; i++) {\n    const aUser = Array.isArray(user) && user.length ? user[i] : {};\n    userArray.push(aUser);\n  }\n\n  const [users, addUsers] = useState({\n    name: \"\",\n    email: \"\",\n    streetAddress1: \"\",\n    streetAddress2: \"\",\n    city: \"\",\n    state: \"\",\n    zipcode: \"\",\n    password: \"\",\n  });\n\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    console.log(`Re-rendered ${count} times`);\n  });\n\n  const history = useHistory();\n\n  const mkAddress = (u) => {\n    var address = `${u.streetAddress1} ${u.city} ${u.state} ${u.zipcode}`;\n    console.log(encodeURI(address));\n    return encodeURI(address);\n  };\n\n  const renderList = (user) => {\n    return (\n      <Card style={style.card} key={user.id}>\n        <Card.Title>{user.name}'s Yard Sale</Card.Title>\n        <div style={style.mapouter}>\n          <div style={style.gmap_canvas}>\n            <iframe\n              width=\"600\"\n              height=\"500\"\n              id=\"gmap_canvas\"\n              src={`https://maps.google.com/maps?q=${mkAddress(\n                user\n              )}&t=&z=13&ie=UTF8&iwloc=&output=embed`}\n              frameBorder=\"0\"\n              scrolling=\"yes\"\n              marginHeight=\"0\"\n              marginWidth=\"0\"\n            ></iframe>\n          </div>\n        </div>\n        <Card.Text>\n          Address: {user.streetAddress1}\n          <span> </span>\n          {user.streetAddress2}\n          <span> </span>\n          {user.city}\n          <span> </span>\n          {user.state}\n          <span> </span>\n          {user.zipcode}\n        </Card.Text>\n\n        <Card.Text>\n          Email:\n          <span> </span>\n          <a\n            href=\"#\"\n            onClick={() => {\n              window.location = \"mailto:\" + user.email;\n            }}\n            style={style.link2}\n          >\n            {user.email}\n          </a>\n        </Card.Text>\n        <Card.Footer>\n          <Button\n            id=\"addCart\"\n            variant=\"outline-light\"\n            onClick={() => {\n              localStorage.setItem(\"id\", user._id);\n              history.push(\"/catalog\");\n            }}\n          >\n            VIEW\n          </Button>\n        </Card.Footer>\n      </Card>\n    );\n  };\n\n  return (\n    <div style={{ maxWidth: \"100vw\", overflowX: \"hidden\" }}>\n      <Container style={style.container} fluid>\n        <Row style={{ height: \"33vh\" }}></Row>\n\n        <Row>\n          <Col className=\"col-1 col-sm-2 col-md-4\"></Col>\n          <Col className=\"col-10 col-sm-8 col-md-4\">\n            {userArray.map(renderList)}\n          </Col>\n          <Col className=\"col-1 col-sm-2 col-md-4\"></Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default List;\n","//Add Products\n\nimport React, { useEffect, useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_PRODUCT } from \"../utils/Mutations\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { QUERY_PRODUCTS } from \"../utils/Queries\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nconst AddProduct = () => {\n  const style = {\n    container: {\n      textAlign: \"center\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\", // make sure the parent is full screen\n      height: \"100%\", // so that the content will center correctly\n      paddingTop: \"25px\",\n      paddingBottom: \"25px\",\n    },\n    input: {\n      width: \"100%\",\n      padding: \"12px 20px\",\n      margin: \"8px 0\",\n      boxSizing: \"border-box\",\n    },\n    card: {\n      margin: \"0 auto\",\n      float: \"none\",\n      marginBottom: \"10px\",\n      backdropFilter: \"blur(2px)\",\n      backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n\n      borderColor: \"white\",\n    },\n    button: {\n      marginLeft: \"10px\",\n    },\n    img: {\n      marginTop: \"30px\",\n      width: \"300px\",\n      display: \"block\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  };\n\n  //Setting input form to have blank values.\n  const [formState, setFormState] = useState({\n    image: \"\",\n    name: \"\",\n    desc: \"\",\n    price: \"\",\n    quantity: \"\",\n    user: localStorage.getItem(\"currentId\"),\n  });\n  const [addProduct, { error, data }] = useMutation(ADD_PRODUCT, {\n    refetchQueries: [{ query: QUERY_PRODUCTS }],\n  });\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"image URL \" + formState.image);\n  });\n\n  // submit form and send input values to DB to create a new Product\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    formState.user = localStorage.getItem(\"currentId\");\n\n    try {\n      const { data } = await addProduct({\n        variables: { ...formState },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n\n    setFormState({\n      image: \"\",\n      name: \"\",\n      desc: \"\",\n      price: \"\",\n      quantity: \"\",\n      user: localStorage.getItem(\"currentId\"),\n    });\n\n    localStorage.setItem(\"loadProduct\", \"TRUE\");\n  };\n\n  const history = useHistory();\n  const handleClick = () => history.push(\"/catalog\");\n\n  return (\n    <main className=\"flex-row justify-center mb-4 text-center\">\n      <Row style={{ height: \"33vh\" }}> </Row>\n\n      <Row>\n        <Col className=\"col-sm-1 col-md-2 col-lg-4\"></Col>\n        <Col className=\"col-12 col-sm-10 col-md-8 col-lg-4\" align=\"center\">\n          <div className=\"card\" style={style.card}>\n            <h4 className=\"card-header text-light p-2\">Add Product</h4>\n            <img src={formState.image} style={style.img}></img>\n            <div className=\"card-body\" style={style.container}>\n              {data ? (\n                <p>\n                  Success! You may now{\" \"}\n                  <Link onClick={handleClick()}>go back to your catalog.</Link>\n                </p>\n              ) : (\n                <form onSubmit={handleFormSubmit}>\n                  {/* <label for=\"imageFile\">Upload a photo of yourself:</label>\n                  <input\n                    type=\"file\"\n                    id=\"imageFile\"\n                    //value={formState.image}\n                    //onChange={handleImage}\n                    capture=\"environment\"\n                    accept=\"image/*\"\n                  ></input> */}\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Image URL, sucessful link will display an image preview\"\n                    name=\"image\"\n                    type=\"text\"\n                    style={style.input}\n                    value={formState.image}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Product Name\"\n                    name=\"name\"\n                    type=\"text\"\n                    style={style.input}\n                    value={formState.name}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Product Description\"\n                    name=\"desc\"\n                    type=\"text\"\n                    style={style.input}\n                    value={formState.desc}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Price (Numbers Only\"\n                    name=\"price\"\n                    type=\"number\"\n                    style={style.input}\n                    value={formState.price}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Quantity (Numbers Only)\"\n                    name=\"quantity\"\n                    type=\"number\"\n                    style={style.input}\n                    value={formState.quantity}\n                    onChange={handleChange}\n                  />\n                  <Button\n                    variant=\"outline-light\"\n                    style={{ cursor: \"pointer\" }}\n                    type=\"submit\"\n                  >\n                    Upload to Database\n                  </Button>\n                  <Link\n                    className=\"btn btn-outline-light\"\n                    style={style.button}\n                    to=\"/\"\n                  >\n                    Cancel\n                  </Link>\n                </form>\n              )}\n\n              {error && (\n                <div className=\"my-3 p-3 bg-danger text-white\">\n                  {error.message}\n                </div>\n              )}\n            </div>\n          </div>\n        </Col>\n        <Col className=\"col-sm-1 col-md-2 col-lg-4\"></Col>\n      </Row>\n    </main>\n  );\n};\n\nexport default AddProduct;\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Card, Button, Form } from \"react-bootstrap\";\nimport { QUERY_SINGLE_PRODUCT } from \"../utils/Queries\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { UPDATE_PRODUCT } from \"../utils/Mutations\";\n\nimport Auth from \"../utils/Auth\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction UpdateProduct() {\n  const style = {\n    container: {\n      textAlign: \"center\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\", // make sure the parent is full screen\n      height: \"100%\", // so that the content will center correctly\n      paddingTop: \"25px\",\n      paddingBottom: \"25px\",\n    },\n    input: {\n      width: \"100%\",\n      padding: \"12px 20px\",\n      margin: \"8px 0\",\n      boxSizing: \"border-box\",\n    },\n    card: {\n      margin: \"0 auto\",\n      float: \"none\",\n      marginBottom: \"10px\",\n      backdropFilter: \"blur(2px)\",\n      backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n      borderColor: \"white\",\n    },\n    button: {\n      marginLeft: \"10px\",\n    },\n    img: {\n      marginTop: \"30px\",\n      width: \"300px\",\n      display: \"block\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  };\n  //get vales of product to be updated from localstorage\n  let updateProductName = localStorage.getItem(\"nameOfUpdateProduct\");\n  let updateProductImage = localStorage.getItem(\"imageOfUpdateProduct\");\n  let updateProductDesc = localStorage.getItem(\"descOfUpdateProduct\");\n  let updateProductPrice = localStorage.getItem(\"priceOfUpdateProduct\");\n  let updateProductQuantity = localStorage.getItem(\"quantityOfUpdateProduct\");\n\n  //set state with initial values\n  const [formState, setFormState] = useState({\n    image: updateProductImage,\n    name: updateProductName,\n    desc: updateProductDesc,\n    price: updateProductPrice,\n    quantity: updateProductQuantity,\n    user: localStorage.getItem(\"currentId\"),\n  });\n\n  const [updateProduct, { error, data }] = useMutation(UPDATE_PRODUCT);\n\n  //update state with new values when they're changed\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n\n    console.log(\"handleChange called to set form state: \" + name + value);\n  };\n\n  //submit run find and update\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = updateProduct({\n        variables: { ...formState },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const history = useHistory();\n  const handleClick = () => history.push(\"/catalog\");\n\n  return (\n    <main className=\"flex-row justify-center mb-4 text-center\">\n      <Row style={{ height: \"33vh\" }}> </Row>\n\n      <Row>\n        <Col className=\"col-sm-1 col-md-2 col-lg-4\"></Col>\n        <Col className=\"col-12 col-sm-10 col-md-8 col-lg-4\" align=\"center\">\n          <div className=\"card\" style={style.card}>\n            <h4 className=\"card-header text-light p-2\">Update Product</h4>\n            <img src={formState.image} style={style.img}></img>\n            <div className=\"card-body\" style={style.container}>\n              {data ? (\n                <p>\n                  Success! You may now head{\" \"}\n                  <Link onClick={handleClick()}>back to your catalog.</Link>\n                </p>\n              ) : (\n                <form onSubmit={handleFormSubmit}>\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Image URL\"\n                    name=\"image\"\n                    type=\"text\"\n                    style={style.input}\n                    value={formState.image}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Product Name\"\n                    name=\"name\"\n                    type=\"text\"\n                    style={style.input}\n                    value={formState.name}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Product Description\"\n                    name=\"desc\"\n                    type=\"text\"\n                    style={style.input}\n                    value={formState.desc}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Price (Numbers Only\"\n                    name=\"price\"\n                    type=\"text\"\n                    style={style.input}\n                    value={formState.price}\n                    onChange={handleChange}\n                  />\n                  <input\n                    className=\"form-input\"\n                    placeholder=\"Quantity (Numbers Only)\"\n                    name=\"quantity\"\n                    type=\"text\"\n                    style={style.input}\n                    value={formState.quantity}\n                    onChange={handleChange}\n                  />\n                  <Button\n                    variant=\"outline-light\"\n                    style={{ cursor: \"pointer\" }}\n                    type=\"submit\"\n                  >\n                    Update\n                  </Button>\n                  <Link\n                    className=\"btn btn-outline-light\"\n                    style={style.button}\n                    to=\"/manageproduct\"\n                  >\n                    Cancel\n                  </Link>\n                </form>\n              )}\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </main>\n  );\n}\n\nexport default UpdateProduct;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { classes } from \"istanbul-lib-coverage\";\nimport mainBackground from \"../src/assets/grass.mp4\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\nimport Main from \"./pages/Main\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Catalog from \"./pages/Catalog\";\nimport List from \"./pages/List\";\nimport AddProduct from \"./pages/AddProduct\";\nimport UpdateProduct from \"./pages/UpdateProduct\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const style = {\n    video: {\n      position: \"fixed\",\n      zIndex: \"-1\",\n      objectFit: \"cover\",\n      width: \"100vw\",\n      height: \"100vh\",\n      top: \"0\",\n      left: \"0\",\n    },\n  };\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Container fluid style={style.img}>\n          <video\n            autoPlay=\"autoplay\"\n            loop=\"loop\"\n            muted\n            playsInline\n            className={classes.Video}\n            style={style.video}\n          >\n            <source src={`${mainBackground}`} type=\"video/mp4\" />\n          </video>\n          <Row>\n            <Col>\n              <Header />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Route exact path=\"/\">\n                <Main />\n              </Route>\n              <Route exact path=\"/login\">\n                <Login />\n              </Route>\n              <Route exact path=\"/signup\">\n                <Signup />\n              </Route>\n              <Route exact path=\"/Catalog\">\n                <Catalog />\n              </Route>\n              <Route exact path=\"/list\">\n                <List />\n              </Route>\n              <Route exact path=\"/addproduct\">\n                <AddProduct />\n              </Route>\n              <Route exact path=\"/updateproduct\">\n                <UpdateProduct />\n              </Route>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Footer />\n            </Col>\n          </Row>\n        </Container>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}